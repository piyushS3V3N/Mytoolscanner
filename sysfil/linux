#!/usr/bin/env python3
import os
from pyfiglet import Figlet
import importlib
import sys
def networkscanner():
    #os.system("python3 ./tool/pingsweeper.py")
    sys.path.insert(1, 'tool/')
    import discover
    discover.run()
def portscanner():
    sys.path.insert(1,'tool/')
    import scanner
    scanner.run()
def nclisten():
    sys.path.insert(1,'tool/')
    import netcat
    netcat.listener()
def ncconnect():
    sys.path.insert(1,'tool/')
    import netcat
    netcat.connect()
def commandline():
    while True :
        opt = (input("\033[1;31m[s3v3n_k17 ;)]~# \033[1;00m"))
        if (opt == "discover"):
            networkscanner()
        elif (opt == "portscan"):
            portscanner()
        elif (opt == "exit" or opt == "Exit" or opt == "quit"):
            print("[;)]Exiting Now.....")
            break
        elif(opt ==  "clear"):
            os.system('clear')
            banner()
        elif(opt ==  "ls"):
            os.system("ls")
        elif(opt=="help"):
            banner()
        elif(opt == "shell" or opt == "Shell"):
            os.system("sh")
        elif(opt == "ncconnect"):
            ncconnect()
        elif(opt == "nclisten"):
            nclisten()
        else:
            print("Invalid Input")
def banner():
    t2 = "  =================================================================== "
    b2 = "  ||          \033[1;92mS3V3N_K17\033[1;00m           ||"
    cust_fig = Figlet(font = 'slant')
    print(cust_fig.renderText("S3V3N_K17"))
    print(t2)
    print(b2)
    print(t2)
    print(""*100)
    print("To use this tool simply type in the command and to exit type exit")
    print(t2)
    print("  Basic Tools")
    print("  Network Discovery (command: discover)")
    print("  Port Scanner (command: portscan)")
    print("  Exit ")
    print("  Shell (command: sh)")
    print("  Netcat Connection(command: ncconnect (to connect to a remote host))") 
    print("  Netcat Listener (command: nclisten(to start a listener on a port))")
    print(t2)
def nmapscanner():
    os.system('python3 nmapscanner.py')
if __name__ == "__main__":
    rows, columns = os.popen('stty size', 'r').read().split()
    rows = int(rows)
    os.system('clear')
    banner()
    commandline()
